name: RingTool CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install ruff pre-commit pytest
        pre-commit install

    - name: Run linter
      run: |
        ruff check .

    - name: Run pre-commit hooks
      run: pre-commit run --all-files

  check_json_names:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Run JSON name validation
        run: python .github/scripts/check_json_names.py config/supervised config/only_test

  # pytest:
  #   runs-on: ubuntu-latest
  #   needs: lint
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Set up Python
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: '3.x'

  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install -r requirements.txt

  #     # - name: Run pytest
  #     #   run: pytest

  check_forbidden_files:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Find forbidden files (.pyc, .log)
        id: find_forbidden
        run: |
          found_file=false
          find . \( -name "*.pyc" -o -name "*.log" \) -print0 | while IFS= read -r -d $'\0' file; do
            echo "::warning file=$file::Found a forbidden file ($file)."
            found_file=true
          done
          if [ "$found_file" = true ]; then
            echo "found_forbidden=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Fail if forbidden files are found
        if: steps.find_forbidden.outputs.found_forbidden == 'true'
        run: |
          echo "Error: Forbidden files (.pyc, .log) should not be included in the repository."
          exit 1

  check_csv:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install pandas
        run: |
          python -m pip install --upgrade pip
          pip install pandas

      - name: Run CSV validation
        run: python .github/scripts/check_csv.py
